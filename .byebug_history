c
seller
n
html_doc.css(seller_css2).text.strip
seller
c
q
c
html_doc.css(''body > div:nth-child(13) > table:nth-child(9) > tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1) > table:nth-child(1) > tbody:nth-child(1) > tr:nth-child(2) > td:nth-child(1) > table:nth-child(3) > tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1) > a:nth-child(1)').text
html_doc.css('body > div:nth-child(13) > table:nth-child(9) > tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1) > table:nth-child(1) > tbody:nth-child(1) > tr:nth-child(2) > td:nth-child(1) > table:nth-child(3) > tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1) > a:nth-child(1)).text
html_doc.css(product_name_css4).text
c
html_doc.css(date_css).text.strip.to_date.strftime('%x')
html_doc.css(date_css).text.strip.to_date.year
html_doc.css(date_css).text.strip
html_doc.css(date_css).text.strip.to_date
c
html_doc.css(date_css).text.strip.to_date
c
html_doc.css(date_css).text.strip.to_date
c
exception.to_s
n
extracted_data
c
q
exception.to_s
exception
n
@user.fresh_token
@user
c
n
items
c
n
product_price
n
product_price
n
c
q
product_price
n
product_name
n
c
q
html_doc.css('body > table:nth-child(3)').text.strip.split('PAID : ')[1].split(' with')[0]
html_doc.css('body > table:nth-child(3)').text.strip.split('PAID :')[1]
html_doc.css('body > table:nth-child(3)').text.strip.split('PAID :')
html_doc.css('body > table:nth-child(3)').text.strip.split('PAID :
items
html_doc.css('body > table:nth-child(3)').text.strip
html_doc.css('body > table:nth-child(3)').text.strip.strip
html_doc.css('body > table:nth-child(3)').text.strip
a={}
html_doc.css('body > table:nth-child(3)').text
a={}
html_doc.css('body > table:nth-child(3)').text
html_doc.css('body > table:nth-child(3)').text.strip
html_doc.css('body > table:nth-child(3)').children[1].children[1].children[1].children[1].children[1].children[1].children[1].children[0].text
html_doc.css('body > table:nth-child(3)').children[1].children[1].children[1].children[1].children[1].children[1].children[1].children.count
html_doc.css('body > table:nth-child(3)').children[1].children[1].children[1].children[1].children[1].children[1].children[1].text
html_doc.css('body > table:nth-child(3)').children[1].children[1].children[1].children[1].children[1].children[1].children[1].children[1].text
html_doc.css('body > table:nth-child(3)').children[1].children[1].children[1].children[1].children[1].children[1].children[1].text
html_doc.css('body > table:nth-child(3)').children[1].children[1].children[1].children[1].children[1].children[1].text
html_doc.css('body > table:nth-child(3)').children[1].children[1].children[1].children[1].children[1].text
html_doc.css('body > table:nth-child(3)').children[1].children[1].children[1].children[1].text
html_doc.css('body > table:nth-child(3)').children[1].children[1].children[1].text
html_doc.css('body > table:nth-child(3)').children[1].children[1].children.count
html_doc.css('body > table:nth-child(3)').children[1].children[1].text
html_doc.css('body > table:nth-child(3)').children[1].children[1]
html_doc.css('body > table:nth-child(3)').children[1].children[0]
html_doc.css('body > table:nth-child(3)').children[1].children.count
html_doc.css('body > table:nth-child(3)').children[0].text
html_doc.css('body > table:nth-child(3)').children.count
html_doc.css('body > table:nth-child(3) > tbody:nth-child(2)')
html_doc.css('body > table:nth-child(3) > tbody:nth-child()')
html_doc.css('body > table:nth-child(3) > tbody:nth-child(1)')
html_doc.css('body > table:nth-child(3)').text
html_doc.css('body > table:nth-child(3)').children[1].text
html_doc.css('body > table:nth-child(3)').children[1]
a= []
html_doc.css('body > table:nth-child(3)').children[1]
html_doc.css('body > table:nth-child(3)').children.count
html_doc.css('body > table:nth-child(3)').children
html_doc.css('body > table:nth-child(3)').child
html_doc.css('body > table:nth-child(3)').keys
html_doc.css('body > table:nth-child(3) > tbody:nth-child(0)')
html_doc.css('body > table:nth-child(3)')
html_doc.css('body > table:nth-child(3) > tbody:nth-child(1)')
html_doc.css('body > table:nth-child(3)')
html_doc.css('body > table:nth-child(3) > tbody:nth-child(1) > tr:nth-child(1)')
html_doc.css('body > table:nth-child(3) > tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1)')
html_doc.css('body > table:nth-child(3)')
html_doc.css('body > table:nth-child(3)
html_doc.css(price_css2)
c
quit
html_doc.css('body > table:nth-child(3) > tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1) > table:nth-child(1) > tbody:nth-child(1) > tr:nth-child(2) > td:nth-child(1)')
c
path
c
html_doc.css('body > table:nth-child(3) > tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1) > table:nth-child(1)')
html_doc.css('body > table:nth-child(3) > tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1) > table:nth-child(1) > tbody:nth-child(1) > tr:nth-child(2) > td:nth-child(1)')
product_name
html_doc.css('body > table:nth-child(3) > tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1) > table:nth-child(1) > tbody:nth-child(1) > tr:nth-child(2) > td:nth-child(1)')
html_doc.css(body > table:nth-child(3) > tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1) > table:nth-child(1) > tbody:nth-child(1) > tr:nth-child(2) > td:nth-child(1)).text
product_name
n
product_name
n
id
n
c
q
CGI::parse(URI.decode(html_doc.search('a')[1]['href']))['itemId']
CGI::parse(URI.decode(html_doc.search('a')[1]['href']))
html_doc.search('a')[1]['href']
html_doc.search('a')[1]['fref']
html_doc.search('a')[1].href
html_doc.search('a').map {|x| x['href'].include?('item')}
s
c
path
c
path
q
html_doc.css(product_name_css).text.strip.first(40)
html_doc.css(product_name_css)
html_doc.css(product_name_css).text
return_val
n
id
n
q
 link_params['item']
 link_params['itemid']
link_params
n
href
n
s
q
CGI::parse(URI.decode(html_doc.search('a')[3]['href']))
html_doc.search('a')[3]['href']
html_doc.search('a')[3]['href'].include?('itemid')
html_doc.search('a').map { |x| x['href'].include?('itemid')}
html_doc.search('a')[1]['href'].include?('itemid')
html_doc.search('a')[0]['href'].include?('itemid')
html_doc.search('a')[0]['href'].include?(itemid)
html_doc.search('a')
get_item_id(html_doc)
path
id
return_val
n
q
URI.decode(html_doc.search('a')[1]['href'])
URI.decode(html_doc.search('a')[0]['href'])
CGI::parse(URI.decode(html_doc.search('a')[0]['href']))
html_doc.search('a')[0]['href']
html_doc.search('a')[0].href
html_doc.search('a').count
id
c
path
q
return_val
id
path
c
path
c
item
c
item
c
item
c
item
c
item
c
item
c
item
c
item
c
item[:name]
item
c
item
c
item
n
item
c
item
c
item
itemc
c
itemc
c
item[:name]
c
item[:name]
c
item[:name]
c
item[:name]
c
item[:name]
c
pp item
item[:name]
item
q
sel1
n
sel
n
q
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.gsub(/[\u0080-\u00ff]/, ' ').split(' ')[1]
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.gsub(/[\u0080-\u00ff]/, ' ').split(' ')
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.gsub(/[\u0080-\u00ff]/, ' ')
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.gsub(/[\u0080-\u00ff]/, '')
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1].gsub(/[\u0080-\u00ff]/, '')
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1]
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1].encode("iso-8859-1").force_encoding("utf-8").split('\xA0')
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1].encode("iso-8859-1").force_encoding("utf-8")
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' '
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1].force_encoding("utf-8")[7]
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1].force_encoding("utf-8").split(' ')
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1].force_encoding("utf-8")
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1].split(160.chr)
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1]
58.chr
160.chr
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1][7].ord
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1][6].ord
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1][6].to_i
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1][6]
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1][7].ascii
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1][7] == ' '
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1][7]
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1][6]
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1][3]
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1]
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1].split(' ')
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')[1]
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text.split(' ')
html_doc.css('b').select { |x| x.text.include?('Seller:') }[0].text
